-- AHS School Database - Assignment 3

-- Creating and using a school database

CREATE DATABASE AHS;

USE AHS;

-- Creating tables for pupils, parents and attendance
-- Using constraints (primary key, foreign key, not null, unique, check)

CREATE TABLE PUPILS (
UPN INT NOT NULL,
ID_PARENTS INT NOT NULL,
FIRST_NAME VARCHAR(80) NOT NULL,
LAST_NAME VARCHAR(80) NOT NULL,
DOB DATE NOT NULL,
YEAR_GROUP VARCHAR(80) NOT NULL,
CONSTRAINT PK_PUPILS PRIMARY KEY (UPN),
FOREIGN KEY(ID_PARENTS) REFERENCES PARENTS(ID_PARENTS)
);

CREATE TABLE PARENTS ( 
ID_PARENTS INT NOT NULL,
MOTHER_FIRST_NAME VARCHAR(80) NOT NULL,
MOTHER_LAST_NAME VARCHAR(80) NOT NULL,
FATHER_FIRST_NAME VARCHAR(80) NOT NULL,
FATHER_LAST_NAME VARCHAR(80) NOT NULL,
PHONE CHAR(11) NOT NULL,
CONSTRAINT PK_PARENTS PRIMARY KEY (ID_PARENTS)
);

CREATE TABLE ATTENDANCE(
ID_ATTEND INT PRIMARY KEY NOT NULL,
UPN INT NOT NULL,
ID_PARENTS INT NOT NULL,
AUTHORISED INT NOT NULL,
UNAUTHORISED INT NOT NULL,
FOREIGN KEY(UPN) REFERENCES PUPILS(UPN),
FOREIGN KEY (ID_PARENTS) REFERENCES PARENTS(ID_PARENTS)
);

-- Populating our tables

INSERT INTO PUPILS
(UPN, ID_PARENTS, FIRST_NAME, LAST_NAME, DOB, YEAR_GROUP)
VALUES
(100, 001,'GEORGE', 'WITTON','2020-05-01','EYFS'),
(101, 002,'MATTIAS', 'KLIT', '2017-09-25','YEAR_1'),
(102, 003,'MARIA', 'HUSTON','2018-06-10','YEAR_6'),
(103, 004,'SARAH', 'KURAN','2017-08-20','YEAR_5'),
(104, 005,'PAUL', 'TIMIN','2019-02-02','YEAR_3'),
(105, 006,'CLARA', 'MANTA','2019-03-30','YEAR_2'),
(106, 007,'GEORGIA', 'KLAMON','2021-12-25','YEAR_4'),
(107, 008,'KIM', 'TUMON','2020-04-01','EYFS');

INSERT INTO PARENTS
(ID_PARENTS,MOTHER_FIRST_NAME,MOTHER_LAST_NAME,FATHER_FIRST_NAME,FATHER_LAST_NAME, PHONE)
VALUES
(001,'TARA','LUTON','MIKE','WITTON','07847312950'),
(002,'EMMA','KARON','SOFOKLIS','KLIT','07847312851'),
(003,'ANVI','TIMID','AGAMEMNON','HUSTON','07897322955'),
(004,'ANTONIA','GIONI','AXILEAS','KURAN','07849212940'),
(005,'NEFELI','KLIF','ECTOR','TIMIN','07948313550'),
(006,'ATHINA','ENTON','THOUKIS','MANTA','07997312555'),
(007,'AFRODITA','TRIMIN','CHRISTIAN','KLAMON','07887333950'),
(008,'HIRA','LIMIN','MATTIAS','TUMON','07121312950');

INSERT INTO ATTENDANCE
(ID_ATTEND,UPN,ID_PARENTS,AUTHORISED,UNAUTHORISED)
VALUES
(298,100,001,5,6),
(275,101,002,8,2),
(288,102,003,6,0),
(308,103,004,1,6),
(777,104,005,3,4),
(922,105,006,3,9),
(110,106,007,6,7),
(596,107,008,5,5);

-- Retrieving data from the tables
SELECT * FROM PUPILS ORDER BY LAST_NAME;

SELECT * FROM PARENTS ORDER BY FATHER_LAST_NAME;

SELECT * FROM ATTENDANCE WHERE AUTHORISED > 5 AND UNAUTHORISED < 9 ORDER BY UPN;

-- Subquery to retrieve the details of the parents that their child has 9 or more unauthorised absences
SELECT PS.FATHER_LAST_NAME, PS.PHONE 
FROM PARENTS PS 
WHERE PS.ID_PARENTS IN (SELECT A.ID_PARENTS 
						FROM ATTENDANCE A 
                        WHERE A.UNAUTHORISED >= 9);
                        
-- View for retrieving names and phone numbers from parents that their children have more than 5 authorised absences 
CREATE VIEW VW_PARENTS_EMAILS 
AS
SELECT P.FIRST_NAME, PS.FATHER_LAST_NAME, PS.PHONE, A.AUTHORISED
FROM PUPILS P
JOIN PARENTS PS ON P.ID_PARENTS=PS.ID_PARENTS
JOIN ATTENDANCE A ON P.UPN=A.UPN
WHERE A.AUTHORISED >=5
WITH CHECK OPTION;

select * from VW_PARENTS_EMAILS;

-- Using DISTINCT to call the pupil's details with UPN=100
SELECT DISTINCT P.FIRST_NAME, P.LAST_NAME FROM PUPILS P 
WHERE UPN=100 
GROUP BY P.LAST_NAME 
ORDER BY P.LAST_NAME DESC;

-- Using "CONCAT" in built function to call the full name and date of birth for pupils in EYFS
SELECT CONCAT(P.FIRST_NAME, ' ', P.LAST_NAME, ' ', P.DOB) AS 'FULL_NAME_PUPILS'
FROM PUPILS P
WHERE P.YEAR_GROUP='EYFS'
ORDER BY P.LAST_NAME;


-- Alter the Pupils table as the secretary forgot to add the email addresses

-- ALTER TABLE PUPILS
-- ADD EMAIL VARCHAR(90) UNIQUE;

-- UPDATE PUPILS
-- SET EMAIL= 'GWITTON@AHS.COM' WHERE UPN=100;
-- UPDATE PUPILS
-- SET EMAIL= 'MKLIT@AHS.COM' WHERE UPN=101;
-- UPDATE PUPILS
-- SET EMAIL= 'MHUSTON@AHS.COM' WHERE UPN=102;
-- UPDATE PUPILS
-- SET EMAIL= 'SKURAN@AHS.COM' WHERE UPN=103;
-- UPDATE PUPILS
-- SET EMAIL= 'PTIMIN@AHS.COM' WHERE UPN=104;
-- UPDATE PUPILS
-- SET EMAIL= 'CMANTA@AHS.COM' WHERE UPN=105;
-- UPDATE PUPILS
-- SET EMAIL= 'GKLAMON@AHS.COM' WHERE UPN=106;
-- UPDATE PUPILS
-- SET EMAIL= 'KTUMON@AHS.COM' WHERE UPN=107;

-- SELECT * FROM PUPILS;

-- Update the email column in the pupils table 
-- UPDATE PUPILS
-- SET EMAIL = 'KTUM@AHS.COM'
-- WHERE UPN=107;

-- SELECT * FROM PUPILS;

-- Delete a pupil's details that left the school from all tables 
-- but as PUPILS table it is connected with the table ATTENDANCE (foreign key) 
-- I will have to delete the pupils details from the ATTENDANCE table first!

-- DELETE FROM ATTENDANCE WHERE UPN=100;
-- DELETE FROM PUPILS P WHERE UPN=100;
-- DELETE FROM PARENTS PS WHERE ID_PARENTS=001;

-- SELECT * FROM ATTENDANCE; 
-- SELECT * FROM PUPILS;
-- SELECT * FROM PARENTS;

-- Inner Join between pupils and parents table
SELECT P.FIRST_NAME, PS.FATHER_LAST_NAME, PS.PHONE FROM PUPILS P INNER JOIN PARENTS PS ON P.ID_PARENTS=PS.ID_PARENTS;

-- Left Outer Join between pupils and attendance
SELECT P.FIRST_NAME, P.LAST_NAME, A.AUTHORISED, A.UNAUTHORISED FROM PUPILS P LEFT OUTER JOIN ATTENDANCE A ON P.UPN=A.UPN;

-- Aggregate In- built Functions (Query with group by)

SELECT A.UPN,
MAX(A.AUTHORISED) AS 'MAX-AU',
MIN(A.UNAUTHORISED) AS 'MIN-UNAU',
SUM(A.AUTHORISED) AS 'SUM-AU',
SUM(A.UNAUTHORISED) AS 'SUM-UNAU'
FROM ATTENDANCE A
GROUP BY A.UPN
ORDER BY A.UPN DESC;


-- Stored Procedure to insert new parents' details

DELIMITER //

CREATE PROCEDURE INSERT_NEW_PARENT(
IN NEW_ID_PARENTS INT,
IN NEW_MOTHER_FIRST_NAME VARCHAR(80),
IN NEW_MOTHER_LAST_NAME VARCHAR(80),
IN NEW_FATHER_FIRST_NAME VARCHAR(80),
IN NEW_FATHER_LAST_NAME VARCHAR(80),
IN NEW_PHONE CHAR(11)
)
BEGIN
INSERT INTO PARENTS(ID_PARENTS,MOTHER_FIRST_NAME,MOTHER_LAST_NAME,FATHER_FIRST_NAME,FATHER_LAST_NAME, PHONE)
VALUES -- We give declared parameters instead of giving them the exact values so that we call more values every time there is a new parent
(NEW_ID_PARENTS, NEW_MOTHER_FIRST_NAME, NEW_MOTHER_LAST_NAME, NEW_FATHER_FIRST_NAME, NEW_FATHER_LAST_NAME, NEW_PHONE);
END //

DELIMITER ;

CALL INSERT_NEW_PARENT(009,'KAPA','LULON','TYRON','WATCHON','07847311178'); -- Here we give the values for the new parent

SELECT * FROM PARENTS; -- This will show all the new values we called above in the table PARENTS
